// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/gleach/kill/interfaces/server/grpc/service.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetEpisodeRequest struct {
	Offset               string   `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEpisodeRequest) Reset()         { *m = GetEpisodeRequest{} }
func (m *GetEpisodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetEpisodeRequest) ProtoMessage()    {}
func (*GetEpisodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d4f5ee5ccba618, []int{0}
}

func (m *GetEpisodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEpisodeRequest.Unmarshal(m, b)
}
func (m *GetEpisodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEpisodeRequest.Marshal(b, m, deterministic)
}
func (m *GetEpisodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEpisodeRequest.Merge(m, src)
}
func (m *GetEpisodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetEpisodeRequest.Size(m)
}
func (m *GetEpisodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEpisodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEpisodeRequest proto.InternalMessageInfo

func (m *GetEpisodeRequest) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

type GetRandomEpisodeRequest struct {
	MaxDuration          string   `protobuf:"bytes,1,opt,name=max_duration,json=maxDuration,proto3" json:"max_duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRandomEpisodeRequest) Reset()         { *m = GetRandomEpisodeRequest{} }
func (m *GetRandomEpisodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetRandomEpisodeRequest) ProtoMessage()    {}
func (*GetRandomEpisodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d4f5ee5ccba618, []int{1}
}

func (m *GetRandomEpisodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRandomEpisodeRequest.Unmarshal(m, b)
}
func (m *GetRandomEpisodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRandomEpisodeRequest.Marshal(b, m, deterministic)
}
func (m *GetRandomEpisodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRandomEpisodeRequest.Merge(m, src)
}
func (m *GetRandomEpisodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetRandomEpisodeRequest.Size(m)
}
func (m *GetRandomEpisodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandomEpisodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRandomEpisodeRequest proto.InternalMessageInfo

func (m *GetRandomEpisodeRequest) GetMaxDuration() string {
	if m != nil {
		return m.MaxDuration
	}
	return ""
}

type PutProgramRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HostName             string   `protobuf:"bytes,2,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Duration             string   `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutProgramRequest) Reset()         { *m = PutProgramRequest{} }
func (m *PutProgramRequest) String() string { return proto.CompactTextString(m) }
func (*PutProgramRequest) ProtoMessage()    {}
func (*PutProgramRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d4f5ee5ccba618, []int{2}
}

func (m *PutProgramRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutProgramRequest.Unmarshal(m, b)
}
func (m *PutProgramRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutProgramRequest.Marshal(b, m, deterministic)
}
func (m *PutProgramRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutProgramRequest.Merge(m, src)
}
func (m *PutProgramRequest) XXX_Size() int {
	return xxx_messageInfo_PutProgramRequest.Size(m)
}
func (m *PutProgramRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutProgramRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutProgramRequest proto.InternalMessageInfo

func (m *PutProgramRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PutProgramRequest) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *PutProgramRequest) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

type PutProgramScheduleEntryRequest struct {
	ProgramId            string   `protobuf:"bytes,1,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
	Weekday              int32    `protobuf:"varint,2,opt,name=weekday,proto3" json:"weekday,omitempty"`
	Hour                 int32    `protobuf:"varint,3,opt,name=hour,proto3" json:"hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutProgramScheduleEntryRequest) Reset()         { *m = PutProgramScheduleEntryRequest{} }
func (m *PutProgramScheduleEntryRequest) String() string { return proto.CompactTextString(m) }
func (*PutProgramScheduleEntryRequest) ProtoMessage()    {}
func (*PutProgramScheduleEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d4f5ee5ccba618, []int{3}
}

func (m *PutProgramScheduleEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutProgramScheduleEntryRequest.Unmarshal(m, b)
}
func (m *PutProgramScheduleEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutProgramScheduleEntryRequest.Marshal(b, m, deterministic)
}
func (m *PutProgramScheduleEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutProgramScheduleEntryRequest.Merge(m, src)
}
func (m *PutProgramScheduleEntryRequest) XXX_Size() int {
	return xxx_messageInfo_PutProgramScheduleEntryRequest.Size(m)
}
func (m *PutProgramScheduleEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutProgramScheduleEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutProgramScheduleEntryRequest proto.InternalMessageInfo

func (m *PutProgramScheduleEntryRequest) GetProgramId() string {
	if m != nil {
		return m.ProgramId
	}
	return ""
}

func (m *PutProgramScheduleEntryRequest) GetWeekday() int32 {
	if m != nil {
		return m.Weekday
	}
	return 0
}

func (m *PutProgramScheduleEntryRequest) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

type PutProgramEpisodeRequest struct {
	ProgramId            string   `protobuf:"bytes,1,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AirDate              string   `protobuf:"bytes,3,opt,name=air_date,json=airDate,proto3" json:"air_date,omitempty"`
	RecordingPath        string   `protobuf:"bytes,4,opt,name=recording_path,json=recordingPath,proto3" json:"recording_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutProgramEpisodeRequest) Reset()         { *m = PutProgramEpisodeRequest{} }
func (m *PutProgramEpisodeRequest) String() string { return proto.CompactTextString(m) }
func (*PutProgramEpisodeRequest) ProtoMessage()    {}
func (*PutProgramEpisodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d4f5ee5ccba618, []int{4}
}

func (m *PutProgramEpisodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutProgramEpisodeRequest.Unmarshal(m, b)
}
func (m *PutProgramEpisodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutProgramEpisodeRequest.Marshal(b, m, deterministic)
}
func (m *PutProgramEpisodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutProgramEpisodeRequest.Merge(m, src)
}
func (m *PutProgramEpisodeRequest) XXX_Size() int {
	return xxx_messageInfo_PutProgramEpisodeRequest.Size(m)
}
func (m *PutProgramEpisodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutProgramEpisodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutProgramEpisodeRequest proto.InternalMessageInfo

func (m *PutProgramEpisodeRequest) GetProgramId() string {
	if m != nil {
		return m.ProgramId
	}
	return ""
}

func (m *PutProgramEpisodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PutProgramEpisodeRequest) GetAirDate() string {
	if m != nil {
		return m.AirDate
	}
	return ""
}

func (m *PutProgramEpisodeRequest) GetRecordingPath() string {
	if m != nil {
		return m.RecordingPath
	}
	return ""
}

type Program struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	HostName             string   `protobuf:"bytes,3,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Duration             string   `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Program) Reset()         { *m = Program{} }
func (m *Program) String() string { return proto.CompactTextString(m) }
func (*Program) ProtoMessage()    {}
func (*Program) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d4f5ee5ccba618, []int{5}
}

func (m *Program) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Program.Unmarshal(m, b)
}
func (m *Program) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Program.Marshal(b, m, deterministic)
}
func (m *Program) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Program.Merge(m, src)
}
func (m *Program) XXX_Size() int {
	return xxx_messageInfo_Program.Size(m)
}
func (m *Program) XXX_DiscardUnknown() {
	xxx_messageInfo_Program.DiscardUnknown(m)
}

var xxx_messageInfo_Program proto.InternalMessageInfo

func (m *Program) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Program) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Program) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *Program) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

type ProgramScheduleEntry struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProgramId            string   `protobuf:"bytes,2,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
	Weekday              int32    `protobuf:"varint,3,opt,name=weekday,proto3" json:"weekday,omitempty"`
	Hour                 int32    `protobuf:"varint,4,opt,name=hour,proto3" json:"hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProgramScheduleEntry) Reset()         { *m = ProgramScheduleEntry{} }
func (m *ProgramScheduleEntry) String() string { return proto.CompactTextString(m) }
func (*ProgramScheduleEntry) ProtoMessage()    {}
func (*ProgramScheduleEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d4f5ee5ccba618, []int{6}
}

func (m *ProgramScheduleEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProgramScheduleEntry.Unmarshal(m, b)
}
func (m *ProgramScheduleEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProgramScheduleEntry.Marshal(b, m, deterministic)
}
func (m *ProgramScheduleEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgramScheduleEntry.Merge(m, src)
}
func (m *ProgramScheduleEntry) XXX_Size() int {
	return xxx_messageInfo_ProgramScheduleEntry.Size(m)
}
func (m *ProgramScheduleEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgramScheduleEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ProgramScheduleEntry proto.InternalMessageInfo

func (m *ProgramScheduleEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProgramScheduleEntry) GetProgramId() string {
	if m != nil {
		return m.ProgramId
	}
	return ""
}

func (m *ProgramScheduleEntry) GetWeekday() int32 {
	if m != nil {
		return m.Weekday
	}
	return 0
}

func (m *ProgramScheduleEntry) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

type ProgramEpisode struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProgramId            string   `protobuf:"bytes,2,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	AirDate              string   `protobuf:"bytes,4,opt,name=air_date,json=airDate,proto3" json:"air_date,omitempty"`
	RecordingPath        string   `protobuf:"bytes,5,opt,name=recording_path,json=recordingPath,proto3" json:"recording_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProgramEpisode) Reset()         { *m = ProgramEpisode{} }
func (m *ProgramEpisode) String() string { return proto.CompactTextString(m) }
func (*ProgramEpisode) ProtoMessage()    {}
func (*ProgramEpisode) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d4f5ee5ccba618, []int{7}
}

func (m *ProgramEpisode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProgramEpisode.Unmarshal(m, b)
}
func (m *ProgramEpisode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProgramEpisode.Marshal(b, m, deterministic)
}
func (m *ProgramEpisode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgramEpisode.Merge(m, src)
}
func (m *ProgramEpisode) XXX_Size() int {
	return xxx_messageInfo_ProgramEpisode.Size(m)
}
func (m *ProgramEpisode) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgramEpisode.DiscardUnknown(m)
}

var xxx_messageInfo_ProgramEpisode proto.InternalMessageInfo

func (m *ProgramEpisode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProgramEpisode) GetProgramId() string {
	if m != nil {
		return m.ProgramId
	}
	return ""
}

func (m *ProgramEpisode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProgramEpisode) GetAirDate() string {
	if m != nil {
		return m.AirDate
	}
	return ""
}

func (m *ProgramEpisode) GetRecordingPath() string {
	if m != nil {
		return m.RecordingPath
	}
	return ""
}

type ProgramEpisodeDetails struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HostName             string   `protobuf:"bytes,2,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	EpisodeName          string   `protobuf:"bytes,3,opt,name=episode_name,json=episodeName,proto3" json:"episode_name,omitempty"`
	StartOffset          string   `protobuf:"bytes,4,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	Duration             string   `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	AirDate              string   `protobuf:"bytes,6,opt,name=air_date,json=airDate,proto3" json:"air_date,omitempty"`
	RecordingPath        string   `protobuf:"bytes,7,opt,name=recording_path,json=recordingPath,proto3" json:"recording_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProgramEpisodeDetails) Reset()         { *m = ProgramEpisodeDetails{} }
func (m *ProgramEpisodeDetails) String() string { return proto.CompactTextString(m) }
func (*ProgramEpisodeDetails) ProtoMessage()    {}
func (*ProgramEpisodeDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d4f5ee5ccba618, []int{8}
}

func (m *ProgramEpisodeDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProgramEpisodeDetails.Unmarshal(m, b)
}
func (m *ProgramEpisodeDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProgramEpisodeDetails.Marshal(b, m, deterministic)
}
func (m *ProgramEpisodeDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgramEpisodeDetails.Merge(m, src)
}
func (m *ProgramEpisodeDetails) XXX_Size() int {
	return xxx_messageInfo_ProgramEpisodeDetails.Size(m)
}
func (m *ProgramEpisodeDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgramEpisodeDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ProgramEpisodeDetails proto.InternalMessageInfo

func (m *ProgramEpisodeDetails) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProgramEpisodeDetails) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *ProgramEpisodeDetails) GetEpisodeName() string {
	if m != nil {
		return m.EpisodeName
	}
	return ""
}

func (m *ProgramEpisodeDetails) GetStartOffset() string {
	if m != nil {
		return m.StartOffset
	}
	return ""
}

func (m *ProgramEpisodeDetails) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *ProgramEpisodeDetails) GetAirDate() string {
	if m != nil {
		return m.AirDate
	}
	return ""
}

func (m *ProgramEpisodeDetails) GetRecordingPath() string {
	if m != nil {
		return m.RecordingPath
	}
	return ""
}

func init() {
	proto.RegisterType((*GetEpisodeRequest)(nil), "service.GetEpisodeRequest")
	proto.RegisterType((*GetRandomEpisodeRequest)(nil), "service.GetRandomEpisodeRequest")
	proto.RegisterType((*PutProgramRequest)(nil), "service.PutProgramRequest")
	proto.RegisterType((*PutProgramScheduleEntryRequest)(nil), "service.PutProgramScheduleEntryRequest")
	proto.RegisterType((*PutProgramEpisodeRequest)(nil), "service.PutProgramEpisodeRequest")
	proto.RegisterType((*Program)(nil), "service.Program")
	proto.RegisterType((*ProgramScheduleEntry)(nil), "service.ProgramScheduleEntry")
	proto.RegisterType((*ProgramEpisode)(nil), "service.ProgramEpisode")
	proto.RegisterType((*ProgramEpisodeDetails)(nil), "service.ProgramEpisodeDetails")
}

func init() {
	proto.RegisterFile("github.com/gleach/kill/interfaces/server/grpc/service.proto", fileDescriptor_d5d4f5ee5ccba618)
}

var fileDescriptor_d5d4f5ee5ccba618 = []byte{
	// 561 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xce, 0x8f, 0xf3, 0xd3, 0x49, 0x89, 0xda, 0x15, 0x90, 0x10, 0xd4, 0xaa, 0xb1, 0x84, 0x40,
	0x42, 0x4a, 0x24, 0x38, 0xd2, 0x13, 0x4a, 0x55, 0xc1, 0x01, 0x42, 0x90, 0x38, 0x70, 0x31, 0x5b,
	0x7b, 0x12, 0xaf, 0x1a, 0x7b, 0xc3, 0x7a, 0x0d, 0xed, 0x53, 0x70, 0xe2, 0x0d, 0x78, 0x3c, 0x1e,
	0x02, 0x65, 0xb3, 0x9b, 0xd8, 0xce, 0xa6, 0xa1, 0xb7, 0xdd, 0x99, 0xd9, 0xf9, 0xe6, 0xfb, 0xc6,
	0xfe, 0xe0, 0xcd, 0x8c, 0xc9, 0x30, 0xbd, 0x1a, 0xf8, 0x3c, 0x1a, 0xce, 0xe6, 0x48, 0xfd, 0x70,
	0x78, 0xcd, 0xe6, 0xf3, 0x21, 0x8b, 0x25, 0x8a, 0x29, 0xf5, 0x31, 0x19, 0x26, 0x28, 0x7e, 0xa0,
	0x18, 0xce, 0xc4, 0xc2, 0x57, 0x67, 0xe6, 0xe3, 0x60, 0x21, 0xb8, 0xe4, 0xa4, 0xa1, 0xaf, 0xee,
	0x4b, 0x38, 0xbe, 0x44, 0x79, 0xb1, 0x60, 0x09, 0x0f, 0x70, 0x82, 0xdf, 0x53, 0x4c, 0x24, 0x79,
	0x0c, 0x75, 0x3e, 0x9d, 0x26, 0x28, 0xbb, 0xe5, 0xb3, 0xf2, 0x8b, 0x83, 0x89, 0xbe, 0xb9, 0xe7,
	0xd0, 0xb9, 0x44, 0x39, 0xa1, 0x71, 0xc0, 0xa3, 0xc2, 0x93, 0x3e, 0x1c, 0x46, 0xf4, 0xc6, 0x0b,
	0x52, 0x41, 0x25, 0xe3, 0xb1, 0x7e, 0xd8, 0x8a, 0xe8, 0xcd, 0x48, 0x87, 0xdc, 0x6f, 0x70, 0x3c,
	0x4e, 0xe5, 0x58, 0xf0, 0x99, 0xa0, 0x91, 0x79, 0x47, 0xc0, 0x89, 0x69, 0x84, 0xba, 0x5e, 0x9d,
	0xc9, 0x53, 0x38, 0x08, 0x79, 0x22, 0x3d, 0x95, 0xa8, 0xa8, 0x44, 0x73, 0x19, 0xf8, 0xb0, 0x4c,
	0xf6, 0xa0, 0xb9, 0x06, 0xa9, 0xae, 0x72, 0xe6, 0xee, 0x46, 0x70, 0xba, 0x41, 0xf8, 0xec, 0x87,
	0x18, 0xa4, 0x73, 0xbc, 0x88, 0xa5, 0xb8, 0x35, 0x70, 0x27, 0x00, 0x8b, 0x55, 0xda, 0x63, 0x81,
	0x06, 0x3d, 0xd0, 0x91, 0x77, 0x01, 0xe9, 0x42, 0xe3, 0x27, 0xe2, 0x75, 0x40, 0x6f, 0x15, 0x6e,
	0x6d, 0x62, 0xae, 0xcb, 0x39, 0x43, 0x9e, 0x0a, 0x05, 0x59, 0x9b, 0xa8, 0xb3, 0xfb, 0xab, 0x0c,
	0xdd, 0x0d, 0x5e, 0x41, 0x90, 0x3d, 0x48, 0x86, 0x77, 0x25, 0xc3, 0xfb, 0x09, 0x34, 0x29, 0x13,
	0x5e, 0x40, 0x25, 0x6a, 0x6a, 0x0d, 0xca, 0xc4, 0x88, 0x4a, 0x24, 0xcf, 0xa0, 0x2d, 0xd0, 0xe7,
	0x22, 0x60, 0xf1, 0xcc, 0x5b, 0x50, 0x19, 0x76, 0x1d, 0x55, 0xf0, 0x60, 0x1d, 0x1d, 0x53, 0x19,
	0xba, 0x53, 0x68, 0xe8, 0x69, 0x48, 0x1b, 0x2a, 0x6b, 0xdc, 0x0a, 0xb3, 0x03, 0xe6, 0x84, 0xae,
	0xde, 0x21, 0xb4, 0x53, 0x10, 0x3a, 0x81, 0x87, 0x36, 0x95, 0xb7, 0x40, 0xf3, 0x22, 0x54, 0xee,
	0x90, 0xbb, 0x6a, 0x97, 0xdb, 0xc9, 0xc8, 0xfd, 0xbb, 0x0c, 0xed, 0xbc, 0xd6, 0xf7, 0xc5, 0x33,
	0x1a, 0x54, 0x77, 0x88, 0xee, 0xec, 0x13, 0xbd, 0x66, 0x13, 0xfd, 0x6f, 0x19, 0x1e, 0xe5, 0xe7,
	0x1a, 0xa1, 0xa4, 0x6c, 0x9e, 0xdc, 0xff, 0xe3, 0xee, 0xc3, 0x21, 0xae, 0x5a, 0x64, 0x77, 0xd2,
	0xd2, 0x31, 0x53, 0x92, 0x48, 0x2a, 0xa4, 0xa7, 0xff, 0xd0, 0xd5, 0xcc, 0x2d, 0x15, 0xfb, 0xa8,
	0x42, 0xb9, 0xcd, 0xd5, 0xf2, 0x9b, 0xcb, 0xd1, 0xad, 0xef, 0xa3, 0xdb, 0xb0, 0xd0, 0x7d, 0xf5,
	0xa7, 0x0a, 0x4d, 0xb3, 0x75, 0xf2, 0x1e, 0x60, 0x63, 0x1f, 0xa4, 0x37, 0x30, 0x2e, 0xb3, 0xe5,
	0x29, 0xbd, 0xd3, 0x75, 0xce, 0xaa, 0x95, 0x5b, 0x22, 0x5f, 0xe0, 0xa8, 0xe8, 0x2e, 0xe4, 0x2c,
	0xdb, 0xd1, 0x66, 0x3c, 0xff, 0xd1, 0xf7, 0x1c, 0x60, 0xf3, 0x97, 0x66, 0x66, 0xdc, 0x32, 0xa3,
	0xde, 0x51, 0xb1, 0x97, 0x5b, 0x22, 0x3e, 0x74, 0x76, 0x78, 0x0a, 0x79, 0x6e, 0x69, 0x65, 0x73,
	0x9d, 0xde, 0x49, 0xb1, 0x6f, 0xae, 0xca, 0x2d, 0x91, 0x4f, 0x59, 0x6b, 0x34, 0xdc, 0xfb, 0x96,
	0xf6, 0x05, 0xf2, 0x9d, 0x1d, 0xe4, 0xdd, 0xd2, 0xdb, 0xfa, 0x57, 0x67, 0xe9, 0xfb, 0x57, 0x75,
	0x65, 0xf8, 0xaf, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x7b, 0xc9, 0x21, 0xe3, 0x2f, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ScheduleClient is the client API for Schedule service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScheduleClient interface {
	GetEpisode(ctx context.Context, in *GetEpisodeRequest, opts ...grpc.CallOption) (*ProgramEpisodeDetails, error)
	GetRandomEpisode(ctx context.Context, in *GetRandomEpisodeRequest, opts ...grpc.CallOption) (*ProgramEpisodeDetails, error)
	PutProgram(ctx context.Context, in *PutProgramRequest, opts ...grpc.CallOption) (*Program, error)
	PutProgramScheduleEntry(ctx context.Context, in *PutProgramScheduleEntryRequest, opts ...grpc.CallOption) (*ProgramScheduleEntry, error)
	PutProgramEpisode(ctx context.Context, in *PutProgramEpisodeRequest, opts ...grpc.CallOption) (*ProgramEpisode, error)
}

type scheduleClient struct {
	cc grpc.ClientConnInterface
}

func NewScheduleClient(cc grpc.ClientConnInterface) ScheduleClient {
	return &scheduleClient{cc}
}

func (c *scheduleClient) GetEpisode(ctx context.Context, in *GetEpisodeRequest, opts ...grpc.CallOption) (*ProgramEpisodeDetails, error) {
	out := new(ProgramEpisodeDetails)
	err := c.cc.Invoke(ctx, "/service.Schedule/GetEpisode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) GetRandomEpisode(ctx context.Context, in *GetRandomEpisodeRequest, opts ...grpc.CallOption) (*ProgramEpisodeDetails, error) {
	out := new(ProgramEpisodeDetails)
	err := c.cc.Invoke(ctx, "/service.Schedule/GetRandomEpisode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) PutProgram(ctx context.Context, in *PutProgramRequest, opts ...grpc.CallOption) (*Program, error) {
	out := new(Program)
	err := c.cc.Invoke(ctx, "/service.Schedule/PutProgram", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) PutProgramScheduleEntry(ctx context.Context, in *PutProgramScheduleEntryRequest, opts ...grpc.CallOption) (*ProgramScheduleEntry, error) {
	out := new(ProgramScheduleEntry)
	err := c.cc.Invoke(ctx, "/service.Schedule/PutProgramScheduleEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleClient) PutProgramEpisode(ctx context.Context, in *PutProgramEpisodeRequest, opts ...grpc.CallOption) (*ProgramEpisode, error) {
	out := new(ProgramEpisode)
	err := c.cc.Invoke(ctx, "/service.Schedule/PutProgramEpisode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScheduleServer is the server API for Schedule service.
type ScheduleServer interface {
	GetEpisode(context.Context, *GetEpisodeRequest) (*ProgramEpisodeDetails, error)
	GetRandomEpisode(context.Context, *GetRandomEpisodeRequest) (*ProgramEpisodeDetails, error)
	PutProgram(context.Context, *PutProgramRequest) (*Program, error)
	PutProgramScheduleEntry(context.Context, *PutProgramScheduleEntryRequest) (*ProgramScheduleEntry, error)
	PutProgramEpisode(context.Context, *PutProgramEpisodeRequest) (*ProgramEpisode, error)
}

// UnimplementedScheduleServer can be embedded to have forward compatible implementations.
type UnimplementedScheduleServer struct {
}

func (*UnimplementedScheduleServer) GetEpisode(ctx context.Context, req *GetEpisodeRequest) (*ProgramEpisodeDetails, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEpisode not implemented")
}
func (*UnimplementedScheduleServer) GetRandomEpisode(ctx context.Context, req *GetRandomEpisodeRequest) (*ProgramEpisodeDetails, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRandomEpisode not implemented")
}
func (*UnimplementedScheduleServer) PutProgram(ctx context.Context, req *PutProgramRequest) (*Program, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutProgram not implemented")
}
func (*UnimplementedScheduleServer) PutProgramScheduleEntry(ctx context.Context, req *PutProgramScheduleEntryRequest) (*ProgramScheduleEntry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutProgramScheduleEntry not implemented")
}
func (*UnimplementedScheduleServer) PutProgramEpisode(ctx context.Context, req *PutProgramEpisodeRequest) (*ProgramEpisode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutProgramEpisode not implemented")
}

func RegisterScheduleServer(s *grpc.Server, srv ScheduleServer) {
	s.RegisterService(&_Schedule_serviceDesc, srv)
}

func _Schedule_GetEpisode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEpisodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).GetEpisode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Schedule/GetEpisode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).GetEpisode(ctx, req.(*GetEpisodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_GetRandomEpisode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRandomEpisodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).GetRandomEpisode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Schedule/GetRandomEpisode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).GetRandomEpisode(ctx, req.(*GetRandomEpisodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_PutProgram_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutProgramRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).PutProgram(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Schedule/PutProgram",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).PutProgram(ctx, req.(*PutProgramRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_PutProgramScheduleEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutProgramScheduleEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).PutProgramScheduleEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Schedule/PutProgramScheduleEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).PutProgramScheduleEntry(ctx, req.(*PutProgramScheduleEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Schedule_PutProgramEpisode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutProgramEpisodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServer).PutProgramEpisode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Schedule/PutProgramEpisode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServer).PutProgramEpisode(ctx, req.(*PutProgramEpisodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Schedule_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.Schedule",
	HandlerType: (*ScheduleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEpisode",
			Handler:    _Schedule_GetEpisode_Handler,
		},
		{
			MethodName: "GetRandomEpisode",
			Handler:    _Schedule_GetRandomEpisode_Handler,
		},
		{
			MethodName: "PutProgram",
			Handler:    _Schedule_PutProgram_Handler,
		},
		{
			MethodName: "PutProgramScheduleEntry",
			Handler:    _Schedule_PutProgramScheduleEntry_Handler,
		},
		{
			MethodName: "PutProgramEpisode",
			Handler:    _Schedule_PutProgramEpisode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/gleach/kill/interfaces/server/grpc/service.proto",
}
